<Type Name="CCTransitionZoomFlipY" FullName="CocosSharp.CCTransitionZoomFlipY">
  <TypeSignature Language="C#" Value="public class CCTransitionZoomFlipY : CocosSharp.CCTransitionSceneOriented" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCTransitionZoomFlipY extends CocosSharp.CCTransitionSceneOriented" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CocosSharp.CCTransitionSceneOriented</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>: Flips the screen vertically doing a little zooming out/in The front face is the outgoing scene and the back face is the incoming scene. </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCTransitionZoomFlipY (float t, CocosSharp.CCScene s, CocosSharp.CCTransitionOrientation o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 t, class CocosSharp.CCScene s, valuetype CocosSharp.CCTransitionOrientation o) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="t" Type="System.Single" />
        <Parameter Name="s" Type="CocosSharp.CCScene" />
        <Parameter Name="o" Type="CocosSharp.CCTransitionOrientation" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <param name="s">To be added.</param>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="public override void OnEnter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnEnter() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Event callback that is invoked every time when  enters the 'stage'. If the  enters the 'stage' with a transition, this event is called when the transition starts. During onEnter you can't access a "sister/brother" node. If you override onEnter, you shall call its parent's one, e.g., Node::onEnter(). </summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
