<Type Name="CCAmplitudeAction" FullName="CocosSharp.CCAmplitudeAction">
  <TypeSignature Language="C#" Value="public abstract class CCAmplitudeAction : CocosSharp.CCActionInterval" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CCAmplitudeAction extends CocosSharp.CCActionInterval" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CocosSharp.CCActionInterval</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>
      <para kind="tool">When this action is added to a CCNode, the action will run over a period of time.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCAmplitudeAction (float duration, float amplitude = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 duration, float32 amplitude) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="duration" Type="System.Single" />
        <Parameter Name="amplitude" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="duration">To be added.</param>
        <param name="amplitude">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Amplitude">
      <MemberSignature Language="C#" Value="public float Amplitude { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Amplitude" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
