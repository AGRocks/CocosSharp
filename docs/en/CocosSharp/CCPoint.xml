<Type Name="CCPoint" FullName="CocosSharp.CCPoint">
  <TypeSignature Language="C#" Value="public struct CCPoint" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CCPoint extends System.ValueType" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines a point vector with two components.</summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCPoint (CocosSharp.CCPoint pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CocosSharp.CCPoint pt) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="pt" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="pt">Value to initialze the point components too.</param>
        <summary>Creates a new instance of CCPoint.</summary>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCPoint (CocosSharp.CCVector2 v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype CocosSharp.CCVector2 v) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="v" Type="CocosSharp.CCVector2" />
      </Parameters>
      <Docs>
        <param name="v">Value to initialize the point componets too.</param>
        <summary>Creates a new instance of CCPoint.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCPoint (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">Value to initialize the X component too.</param>
        <param name="y">Value to initialize the Y component too.</param>
        <summary>Creates a new instance of CCPoint.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorLowerLeft">
      <MemberSignature Language="C#" Value="public static readonly CocosSharp.CCPoint AnchorLowerLeft;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CocosSharp.CCPoint AnchorLowerLeft" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Equals to CCPoint(0, 0).</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorLowerRight">
      <MemberSignature Language="C#" Value="public static readonly CocosSharp.CCPoint AnchorLowerRight;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CocosSharp.CCPoint AnchorLowerRight" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Equals to CCPoint(1, 0).</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorMiddle">
      <MemberSignature Language="C#" Value="public static readonly CocosSharp.CCPoint AnchorMiddle;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CocosSharp.CCPoint AnchorMiddle" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Equals to CCPoint(0.5f, 0.5f).</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorMiddleBottom">
      <MemberSignature Language="C#" Value="public static readonly CocosSharp.CCPoint AnchorMiddleBottom;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CocosSharp.CCPoint AnchorMiddleBottom" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Equals to CCPoint(0.5f, 0).</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorMiddleLeft">
      <MemberSignature Language="C#" Value="public static readonly CocosSharp.CCPoint AnchorMiddleLeft;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CocosSharp.CCPoint AnchorMiddleLeft" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Equals to CCPoint(0, 0.5f).</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorMiddleRight">
      <MemberSignature Language="C#" Value="public static readonly CocosSharp.CCPoint AnchorMiddleRight;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CocosSharp.CCPoint AnchorMiddleRight" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Equals to CCPoint(1, 0.5f).</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorMiddleTop">
      <MemberSignature Language="C#" Value="public static readonly CocosSharp.CCPoint AnchorMiddleTop;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CocosSharp.CCPoint AnchorMiddleTop" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Equals to CCPoint(0.5f, 1).</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorUpperLeft">
      <MemberSignature Language="C#" Value="public static readonly CocosSharp.CCPoint AnchorUpperLeft;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CocosSharp.CCPoint AnchorUpperLeft" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Equals to CCPoint(0, 1).</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AnchorUpperRight">
      <MemberSignature Language="C#" Value="public static readonly CocosSharp.CCPoint AnchorUpperRight;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CocosSharp.CCPoint AnchorUpperRight" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Equals to CCPoint(1, 1).</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AngleSigned">
      <MemberSignature Language="C#" Value="public static float AngleSigned (CocosSharp.CCPoint a, CocosSharp.CCPoint b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 AngleSigned(valuetype CocosSharp.CCPoint a, valuetype CocosSharp.CCPoint b) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="CocosSharp.CCPoint" />
        <Parameter Name="b" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint Clamp (CocosSharp.CCPoint p, CocosSharp.CCPoint from, CocosSharp.CCPoint to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint Clamp(valuetype CocosSharp.CCPoint p, valuetype CocosSharp.CCPoint from, valuetype CocosSharp.CCPoint to) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="CocosSharp.CCPoint" />
        <Parameter Name="from" Type="CocosSharp.CCPoint" />
        <Parameter Name="to" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <param name="from">To be added.</param>
        <param name="to">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min_inclusive, float max_inclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min_inclusive, float32 max_inclusive) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="min_inclusive" Type="System.Single" />
        <Parameter Name="max_inclusive" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min_inclusive">To be added.</param>
        <param name="max_inclusive">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputationOperation">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint ComputationOperation (CocosSharp.CCPoint p, CocosSharp.CCPoint.ComputationOperationDelegate del);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint ComputationOperation(valuetype CocosSharp.CCPoint p, class CocosSharp.CCPoint/ComputationOperationDelegate del) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="CocosSharp.CCPoint" />
        <Parameter Name="del" Type="CocosSharp.CCPoint+ComputationOperationDelegate" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <param name="del">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossProduct">
      <MemberSignature Language="C#" Value="public static float CrossProduct (CocosSharp.CCPoint v1, CocosSharp.CCPoint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 CrossProduct(valuetype CocosSharp.CCPoint v1, valuetype CocosSharp.CCPoint v2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="CocosSharp.CCPoint" />
        <Parameter Name="v2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distance">
      <MemberSignature Language="C#" Value="public static float Distance (CocosSharp.CCPoint v1, CocosSharp.CCPoint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Distance(valuetype CocosSharp.CCPoint v1, valuetype CocosSharp.CCPoint v2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="CocosSharp.CCPoint" />
        <Parameter Name="v2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>Calculates the distance between two points float v2.1.4 </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DistanceSQ">
      <MemberSignature Language="C#" Value="public float DistanceSQ (ref CocosSharp.CCPoint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 DistanceSQ(valuetype CocosSharp.CCPoint v2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v2" Type="CocosSharp.CCPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static float Dot (CocosSharp.CCPoint p1, CocosSharp.CCPoint p2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Dot(valuetype CocosSharp.CCPoint p1, valuetype CocosSharp.CCPoint p2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="CocosSharp.CCPoint" />
        <Parameter Name="p2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>Calculates dot product of two points. float v2.1.4 </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DotProduct">
      <MemberSignature Language="C#" Value="public static float DotProduct (CocosSharp.CCPoint v1, CocosSharp.CCPoint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 DotProduct(valuetype CocosSharp.CCPoint v1, valuetype CocosSharp.CCPoint v2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="CocosSharp.CCPoint" />
        <Parameter Name="v2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static bool Equal (ref CocosSharp.CCPoint point1, ref CocosSharp.CCPoint point2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equal(valuetype CocosSharp.CCPoint point1, valuetype CocosSharp.CCPoint point2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="CocosSharp.CCPoint&amp;" RefType="ref" />
        <Parameter Name="point2" Type="CocosSharp.CCPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="point1">To be added.</param>
        <param name="point2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (CocosSharp.CCPoint p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype CocosSharp.CCPoint p) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForAngle">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint ForAngle (float a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint ForAngle(float32 a) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FuzzyEqual">
      <MemberSignature Language="C#" Value="public static bool FuzzyEqual (CocosSharp.CCPoint a, CocosSharp.CCPoint b, float variance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool FuzzyEqual(valuetype CocosSharp.CCPoint a, valuetype CocosSharp.CCPoint b, float32 variance) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="CocosSharp.CCPoint" />
        <Parameter Name="b" Type="CocosSharp.CCPoint" />
        <Parameter Name="variance" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="variance">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectPoint">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint IntersectPoint (CocosSharp.CCPoint A, CocosSharp.CCPoint B, CocosSharp.CCPoint C, CocosSharp.CCPoint D);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint IntersectPoint(valuetype CocosSharp.CCPoint A, valuetype CocosSharp.CCPoint B, valuetype CocosSharp.CCPoint C, valuetype CocosSharp.CCPoint D) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A" Type="CocosSharp.CCPoint" />
        <Parameter Name="B" Type="CocosSharp.CCPoint" />
        <Parameter Name="C" Type="CocosSharp.CCPoint" />
        <Parameter Name="D" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="A">To be added.</param>
        <param name="B">To be added.</param>
        <param name="C">To be added.</param>
        <param name="D">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertY">
      <MemberSignature Language="C#" Value="public CocosSharp.CCPoint InvertY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCPoint InvertY" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public float Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Length" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Calculates distance between point an origin float v2.1.4 </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LengthSQ">
      <MemberSignature Language="C#" Value="public float LengthSQ { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LengthSQ" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LengthSquare">
      <MemberSignature Language="C#" Value="public float LengthSquare { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LengthSquare" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lerp">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint Lerp (CocosSharp.CCPoint a, CocosSharp.CCPoint b, float alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint Lerp(valuetype CocosSharp.CCPoint a, valuetype CocosSharp.CCPoint b, float32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="CocosSharp.CCPoint" />
        <Parameter Name="b" Type="CocosSharp.CCPoint" />
        <Parameter Name="alpha" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <param name="alpha">To be added.</param>
        <summary>Linear Interpolation between two points a and b alpha == 0 ? a alpha == 1 ? b otherwise a value between a..b v2.1.4 </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LineIntersect">
      <MemberSignature Language="C#" Value="public static bool LineIntersect (CocosSharp.CCPoint A, CocosSharp.CCPoint B, CocosSharp.CCPoint C, CocosSharp.CCPoint D, ref float S, ref float T);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool LineIntersect(valuetype CocosSharp.CCPoint A, valuetype CocosSharp.CCPoint B, valuetype CocosSharp.CCPoint C, valuetype CocosSharp.CCPoint D, float32 S, float32 T) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A" Type="CocosSharp.CCPoint" />
        <Parameter Name="B" Type="CocosSharp.CCPoint" />
        <Parameter Name="C" Type="CocosSharp.CCPoint" />
        <Parameter Name="D" Type="CocosSharp.CCPoint" />
        <Parameter Name="S" Type="System.Single&amp;" RefType="ref" />
        <Parameter Name="T" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="A">To be added.</param>
        <param name="B">To be added.</param>
        <param name="C">To be added.</param>
        <param name="D">To be added.</param>
        <param name="S">To be added.</param>
        <param name="T">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Midpoint">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint Midpoint (CocosSharp.CCPoint p1, CocosSharp.CCPoint p2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint Midpoint(valuetype CocosSharp.CCPoint p1, valuetype CocosSharp.CCPoint p2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="CocosSharp.CCPoint" />
        <Parameter Name="p2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>Calculates midpoint between two points. Point v3.0 </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MultiplyComponents">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint MultiplyComponents (CocosSharp.CCPoint a, CocosSharp.CCPoint b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint MultiplyComponents(valuetype CocosSharp.CCPoint a, valuetype CocosSharp.CCPoint b) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="CocosSharp.CCPoint" />
        <Parameter Name="b" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="b">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinity">
      <MemberSignature Language="C#" Value="public static readonly CocosSharp.CCPoint NegativeInfinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CocosSharp.CCPoint NegativeInfinity" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public float Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 Normalize() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns point multiplied to a length of 1. If the point is 0, it returns (1, 0) Point v2.1.4 </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint Normalize (CocosSharp.CCPoint p);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint Normalize(valuetype CocosSharp.CCPoint p) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public CocosSharp.CCPoint Offset (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CocosSharp.CCPoint Offset(float32 dx, float32 dy) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">To be added.</param>
        <param name="dy">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint op_Addition (CocosSharp.CCPoint p1, CocosSharp.CCPoint p2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CocosSharp.CCPoint op_Addition(valuetype CocosSharp.CCPoint p1, valuetype CocosSharp.CCPoint p2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="CocosSharp.CCPoint" />
        <Parameter Name="p2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint op_Division (CocosSharp.CCPoint p, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CocosSharp.CCPoint op_Division(valuetype CocosSharp.CCPoint p, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="CocosSharp.CCPoint" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (CocosSharp.CCPoint p1, CocosSharp.CCPoint p2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype CocosSharp.CCPoint p1, valuetype CocosSharp.CCPoint p2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="CocosSharp.CCPoint" />
        <Parameter Name="p2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint op_Explicit (CocosSharp.CCSize size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CocosSharp.CCPoint op_Explicit(valuetype CocosSharp.CCSize size) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="CocosSharp.CCSize" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCVector2 op_Implicit (CocosSharp.CCPoint point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CocosSharp.CCVector2 op_Implicit(valuetype CocosSharp.CCPoint point) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCVector2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint op_Implicit (CocosSharp.CCVector2 point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CocosSharp.CCPoint op_Implicit(valuetype CocosSharp.CCVector2 point) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="CocosSharp.CCVector2" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (CocosSharp.CCPoint p1, CocosSharp.CCPoint p2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype CocosSharp.CCPoint p1, valuetype CocosSharp.CCPoint p2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="CocosSharp.CCPoint" />
        <Parameter Name="p2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint op_Multiply (CocosSharp.CCPoint p1, CocosSharp.CCPoint p2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CocosSharp.CCPoint op_Multiply(valuetype CocosSharp.CCPoint p1, valuetype CocosSharp.CCPoint p2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="CocosSharp.CCPoint" />
        <Parameter Name="p2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint op_Multiply (CocosSharp.CCPoint p, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CocosSharp.CCPoint op_Multiply(valuetype CocosSharp.CCPoint p, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="CocosSharp.CCPoint" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint op_Subtraction (CocosSharp.CCPoint p1, CocosSharp.CCPoint p2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CocosSharp.CCPoint op_Subtraction(valuetype CocosSharp.CCPoint p1, valuetype CocosSharp.CCPoint p2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="CocosSharp.CCPoint" />
        <Parameter Name="p2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint op_UnaryNegation (CocosSharp.CCPoint p1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CocosSharp.CCPoint op_UnaryNegation(valuetype CocosSharp.CCPoint p1) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint op_UnaryPlus (CocosSharp.CCPoint p1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype CocosSharp.CCPoint op_UnaryPlus(valuetype CocosSharp.CCPoint p1) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint Parse(string s) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Perp">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint Perp (CocosSharp.CCPoint p);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint Perp(valuetype CocosSharp.CCPoint p) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <summary>Calculates perpendicular of v, rotated 90 degrees counter-clockwise  cross(v, perp(v)) &gt;= 0 Point v2.1.4 </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PerpendicularClockwise">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint PerpendicularClockwise (CocosSharp.CCPoint v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint PerpendicularClockwise(valuetype CocosSharp.CCPoint v) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerpendicularCounterClockwise">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint PerpendicularCounterClockwise (CocosSharp.CCPoint v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint PerpendicularCounterClockwise(valuetype CocosSharp.CCPoint v) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint Project (CocosSharp.CCPoint v1, CocosSharp.CCPoint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint Project(valuetype CocosSharp.CCPoint v1, valuetype CocosSharp.CCPoint v2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="CocosSharp.CCPoint" />
        <Parameter Name="v2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>Calculates the projection of this over other. Point v2.1.4 </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public CocosSharp.CCPoint Reverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CocosSharp.CCPoint Reverse" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint Rotate (CocosSharp.CCPoint v1, CocosSharp.CCPoint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint Rotate(valuetype CocosSharp.CCPoint v1, valuetype CocosSharp.CCPoint v2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="CocosSharp.CCPoint" />
        <Parameter Name="v2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>Complex multiplication of two points ("rotates" two points). Point vector with an angle of this.getAngle() + other.getAngle(), and a length of this.getLength() * other.getLength(). v2.1.4 </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RotateByAngle">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint RotateByAngle (CocosSharp.CCPoint v, CocosSharp.CCPoint pivot, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint RotateByAngle(valuetype CocosSharp.CCPoint v, valuetype CocosSharp.CCPoint pivot, float32 angle) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="CocosSharp.CCPoint" />
        <Parameter Name="pivot" Type="CocosSharp.CCPoint" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="v">is the pivot, naturally </param>
        <param name="pivot">is the angle of rotation ccw in radians </param>
        <param name="angle">To be added.</param>
        <summary>Rotates a point counter clockwise by the angle around a pivot the rotated point v2.1.4 </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SegmentIntersect">
      <MemberSignature Language="C#" Value="public static bool SegmentIntersect (CocosSharp.CCPoint A, CocosSharp.CCPoint B, CocosSharp.CCPoint C, CocosSharp.CCPoint D);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SegmentIntersect(valuetype CocosSharp.CCPoint A, valuetype CocosSharp.CCPoint B, valuetype CocosSharp.CCPoint C, valuetype CocosSharp.CCPoint D) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A" Type="CocosSharp.CCPoint" />
        <Parameter Name="B" Type="CocosSharp.CCPoint" />
        <Parameter Name="C" Type="CocosSharp.CCPoint" />
        <Parameter Name="D" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="A">To be added.</param>
        <param name="B">To be added.</param>
        <param name="C">To be added.</param>
        <param name="D">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sub">
      <MemberSignature Language="C#" Value="public CocosSharp.CCPoint Sub (ref CocosSharp.CCPoint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype CocosSharp.CCPoint Sub(valuetype CocosSharp.CCPoint v2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v2" Type="CocosSharp.CCPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="v2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToAngle">
      <MemberSignature Language="C#" Value="public static float ToAngle (CocosSharp.CCPoint v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToAngle(valuetype CocosSharp.CCPoint v) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unrotate">
      <MemberSignature Language="C#" Value="public static CocosSharp.CCPoint Unrotate (CocosSharp.CCPoint v1, CocosSharp.CCPoint v2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CocosSharp.CCPoint Unrotate(valuetype CocosSharp.CCPoint v1, valuetype CocosSharp.CCPoint v2) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v1" Type="CocosSharp.CCPoint" />
        <Parameter Name="v2" Type="CocosSharp.CCPoint" />
      </Parameters>
      <Docs>
        <param name="v1">To be added.</param>
        <param name="v2">To be added.</param>
        <summary>Unrotates two points. Point vector with an angle of this.getAngle() - other.getAngle(), and a length of this.getLength() * other.getLength(). v2.1.4 </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 X" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 Y" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly CocosSharp.CCPoint Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype CocosSharp.CCPoint Zero" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>CocosSharp.CCPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a CCPoint with all of its components set to zero.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
