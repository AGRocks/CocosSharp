<Type Name="CCActionIntervalState" FullName="CocosSharp.CCActionIntervalState">
  <TypeSignature Language="C#" Value="public class CCActionIntervalState : CocosSharp.CCFiniteTimeActionState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CCActionIntervalState extends CocosSharp.CCFiniteTimeActionState" />
  <AssemblyInfo>
    <AssemblyName>CocosSharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CocosSharp.CCFiniteTimeActionState</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CCActionIntervalState (CocosSharp.CCActionInterval action, CocosSharp.CCNode target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CocosSharp.CCActionInterval action, class CocosSharp.CCNode target) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="action" Type="CocosSharp.CCActionInterval" />
        <Parameter Name="target" Type="CocosSharp.CCNode" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public float Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Elapsed" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstTick">
      <MemberSignature Language="C#" Value="protected bool FirstTick { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FirstTick" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDone">
      <MemberSignature Language="C#" Value="public override bool IsDone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDone" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para kind="tool">Determines if this action has run to completion</para>
        </summary>
        <value>
        </value>
        <remarks>
          <para kind="tool">True if this particular action has completed execution.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Step">
      <MemberSignature Language="C#" Value="public override void Step (float dt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Step(float32 dt) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dt" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dt">
          <para kind="tool">Delta time since the last invocation</para>
        </param>
        <summary>
          <para kind="tool">Called every frame with it's delta time.</para>
        </summary>
        <remarks>
          <para kind="tool">In general, you do not need to override this method, you are better off just overriding Update.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
